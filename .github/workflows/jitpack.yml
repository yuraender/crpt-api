name: Publish to JitPack

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Generate Javadoc
        run: ./gradlew javadoc

      - name: Upload Javadoc as artifact
        uses: actions/upload-artifact@v3
        with:
          name: javadoc
          path: build/docs/javadoc/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            build/libs/
            build/publications/mavenJava/

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Read version from release
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and publish to GitHub Packages
        run: |
          ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create JitPack compatible release
        run: |
          tar -czf crpt-api-${{ steps.get_version.outputs.VERSION }}.tar.gz \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.gradle' \
            --exclude='build' \
            --exclude='*.iml' \
            .
          gh release upload ${{ steps.get_version.outputs.VERSION }} crpt-api-${{ steps.get_version.outputs.VERSION }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-docs:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Javadoc artifact
        uses: actions/download-artifact@v3
        with:
          name: javadoc
          path: ./javadoc

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./javadoc
          keep_files: true
